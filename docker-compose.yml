services:
  backend:
    build: backend
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  csr:
    build: csr
    ports:
      - "4201:80"
    depends_on:
      db:
        condition: service_healthy
    profiles: ["csr"]

  ssr:
    build: ssr
    ports:
      - "4202:4000"
    depends_on:
      db:
        condition: service_healthy
    profiles: ["ssr"]

  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  metrics:
    build: metrics
    ports:
      - "3001:3001"
    volumes:
      - metrics.db:/app/db

volumes:
  postgres_data:
